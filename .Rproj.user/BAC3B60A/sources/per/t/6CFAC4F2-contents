---
title: "Lab 1"
output: html_notebook
---

# Part 1 - linear model
```{r}
load("Data/Pb_mossa.rda")
summary(Pb_mossa)
head(Pb_mossa)
Pb_mossa$nyear = I(Pb_mossa$year-1975)
```
```{r}
(Pb_mossa.model <- lm(Pb ~ I(year-1975), data = Pb_mossa))
(Pb_mossa.summary <- summary(Pb_mossa.model))
```
```{r}
(Pb_mossa.xtxinv <- Pb_mossa.summary$cov.unscaled)
(Pb_mossa.beta.cov <- Pb_mossa.summary$sigma^2*Pb_mossa.xtxinv)
```
```{r}
sqrt(diag(Pb_mossa.beta.cov))
Pb_mossa.summary$coefficients
```

```{r}
library(ggplot2)
#plot(Pb_mossa$year, Pb_mossa$Pb)
ggplot(data =Pb_mossa, 
           aes(x=nyear, y=Pb)) + 
    geom_point()
(
  plot.data <- 
    ggplot(data =Pb_mossa, 
           aes(x=nyear, y=Pb)) + 
    geom_point(size = 3) +
    xlab("Time after 1975 (years)") +
    ylab("Pb in moss (mg/kg)") +
    labs(title = "Pb in moss over time") +
    theme(text = element_text(size = 18))
)
```
```{r}

(
  plot.data + 
    geom_smooth(method = lm, se = FALSE) +
    labs(caption = "data and fitted line")
)

```
```{r}
(
  plot.conf <- plot.data + 
    geom_smooth(method = lm) +
    labs(caption = "data, fitted line and 95% confidence interval")
)
```
```{r}
Pb_mossa.pred <- 
  cbind(Pb_mossa, 
        pred = predict(Pb_mossa.model, interval = "prediction"))
head(Pb_mossa.pred)
```
```{r}
(
  plot.conf +
    geom_line(data = Pb_mossa.pred, aes(y = pred.lwr),
              color = "red", linetype = "dashed", size = 1) +
    geom_line(data = Pb_mossa.pred, aes(y = pred.upr),
              color = "red", linetype = "dashed", size = 1) +
    labs(caption = "data, fitted line, 95% confidence and prediction intervals")
)
```
```{r}
Pb_mossa.pred$e <- Pb_mossa.model$residuals
head(Pb_mossa.pred)

(max.e <- max(abs(Pb_mossa.pred$e)))
(Pb_mossa.elims <- c(-max.e, max.e))
```
```{r}
ggplot(data = Pb_mossa.pred, 
       aes(x = nyear, y = e)) +
  geom_point(size = 3) +
  geom_hline(yintercept = 0) +
  expand_limits(y = Pb_mossa.elims) +
  xlab("Time (years)") +
  ylab("Residual") +
  labs(tag = "A") +
  labs(title = "Residuals vs x-values") +
  theme(text = element_text(size = 18))
```
A trend can be seen where the residuals are large early and smaller later on. They don't seem to be randomly distributed around 0 either.

```{r}
ggplot(data = Pb_mossa.pred, 
       aes(x = pred.fit, y = e)) +
  geom_point(size = 3) +
  geom_hline(yintercept = 0) +
  expand_limits(y = Pb_mossa.elims) +
  xlab("Predicted Pb amount (mg/kg)") +
  ylab("Residual") +
  labs(tag = "B") +
  labs(title = "Residuals vs predicted values Y-hat") +
  theme(text = element_text(size = 18))
```
Same problem here

```{r}
ggplot(data = Pb_mossa.pred, 
       aes(sample = e)) +
  geom_qq(size = 3) +
  geom_qq_line() +
  labs(tag = "C") +
  labs(title = "Normal Q-Q-plot of the residuals") +
  theme(text = element_text(size = 18))
```
Points should be linear all the way but grows in the end

```{r}
(Pb_mossa.x0 <- data.frame(year = c(2015, 2020)))

(
  Pb_mossa.y0.pred <- 
    cbind(Pb_mossa.x0, 
          predict(Pb_mossa.model, Pb_mossa.x0, se.fit = TRUE),
          conf = predict(Pb_mossa.model, Pb_mossa.x0, 
                         interval = "confidence"),
          pred = predict(Pb_mossa.model, Pb_mossa.x0,
                         interval = "prediction"))
)

Pb_mossa.y0.pred$residual.scale <-  Pb_mossa.y0.pred$conf.fit <-
  Pb_mossa.y0.pred$pred.fit <- NULL
Pb_mossa.y0.pred

Pb_mossa.y0.pred$se.pred <- 
  sqrt(Pb_mossa.summary$sigma^2 + Pb_mossa.y0.pred$se.fit^2)
```
The prediction and confidence intervals are not realistic since some of the values are negative. Especially the confidence interval which has a negative upper bound.


# Part 2 - log transformation
```{r}
library(ggplot2)
Pb_log = Pb_mossa
Pb_log$Pb <- log(Pb_mossa$Pb)
Pb_log$nyear <- Pb_mossa$nyear

Pb_log
```
```{r}
ggplot(data =Pb_log, 
           aes(x=nyear, y=Pb)) + 
    geom_point()
(
  plot.data <- 
    ggplot(data =Pb_log, 
           aes(x=nyear, y=Pb)) + 
    geom_point(size = 3) +
    xlab("Time after 1975 (years)") +
    ylab("Pb in moss (mg/kg)") +
    labs(title = "Pb in moss over time") +
    theme(text = element_text(size = 18))
)
```


```{r}
(
  plot.data + 
    geom_smooth(method = lm, se = FALSE) +
    labs(caption = "data and fitted line")
)

(Pb_log.model <- lm(Pb ~ nyear, data = Pb_log))
(Pb_log.summary <- summary(Pb_log.model))

Pb_log.pred <- 
  cbind(Pb_log,
        pred = predict(Pb_log.model, interval = "prediction"))
head(Pb_log.pred)

(
  plot.conf <- plot.data + 
    geom_smooth(method = lm) +
    labs(caption = "data, fitted line and 95% confidence interval")
)
(
  plot.conf +
    geom_line(data = Pb_log.pred, aes(y = pred.lwr),
              color = "red", linetype = "dashed", size = 1) +
    geom_line(data = Pb_log.pred, aes(y = pred.upr),
              color = "red", linetype = "dashed", size = 1) +
    labs(caption = "data, fitted line, 95% confidence and prediction intervals")
)
```
This fit looks a lot better!

```{r}
Pb_log.pred$e <- Pb_log.model$residuals
head(Pb_log.pred)

(max.e <- max(abs(Pb_log.pred$e)))
(Pb_log.elims <- c(-max.e, max.e))
```
```{r}
ggplot(data = Pb_log.pred, 
       aes(x = nyear, y = e)) +
  geom_point(size = 3) +
  geom_hline(yintercept = 0) +
  expand_limits(y = Pb_log.elims) +
  xlab("Time (years)") +
  ylab("Residual") +
  labs(tag = "A") +
  labs(title = "Residuals vs x-values") +
  theme(text = element_text(size = 18))
```
The values look distributed evenly around 0 which is promising

```{r}
ggplot(data = Pb_log.pred, 
       aes(x = pred.fit, y = e)) +
  geom_point(size = 3) +
  geom_hline(yintercept = 0) +
  expand_limits(y = Pb_log.elims) +
  xlab("Predicted Pb amount (mg/kg)") +
  ylab("Residual") +
  labs(tag = "B") +
  labs(title = "Residuals vs predicted values Y-hat") +
  theme(text = element_text(size = 18))
```
These also look evenly distributed around 0.

```{r}
ggplot(data = Pb_log.pred, 
       aes(sample = e)) +
  geom_qq(size = 3) +
  geom_qq_line() +
  labs(tag = "C") +
  labs(title = "Normal Q-Q-plot of the residuals") +
  theme(text = element_text(size = 18))
```
Looks quite good. The fit seems to be a bit off due to the top right point being more off than the others.

```{r}
(Pb_log.x0 <- data.frame(nyear = c(2015-1975, 2020-1975)))

(
  Pb_log.y0.pred <- 
    cbind(Pb_log.x0, 
          predict(Pb_log.model, Pb_log.x0, se.fit = TRUE),
          conf = predict(Pb_log.model, Pb_log.x0, 
                         interval = "confidence"),
          pred = predict(Pb_log.model, Pb_log.x0,
                         interval = "prediction"))
)

Pb_log.y0.pred$residual.scale <- Pb_log.y0.pred$conf.fit <-
  Pb_log.y0.pred$pred.fit <- NULL
Pb_log.y0.pred

Pb_log.y0.pred$se.pred <- 
  sqrt(Pb_log.summary$sigma^2 + Pb_log.y0.pred$se.fit^2)
```
The intervals look better but are still slightly negative. This is likely due to the last point in the QQ-plot being very off.

# Part 3 - transforming back

```{r}
Pb_log.b0 = Pb_log.summary$coefficients[1]
Pb_log.b1 = Pb_log.summary$coefficients[2]
Pb_log.a = exp(Pb_log.b0)
Pb_log.b = exp(Pb_log.b1)
Pb_log.Ia = exp(confint(Pb_log.model)[1,])
Pb_log.Ib = exp(confint(Pb_log.model)[2,])
```
Since the model can be described by Y = a + b*exp(x), considering year=1975 nets x = 0 which results in the concentration being Y = a + b:
```{r}
Pb_log.a + Pb_log.b
```
which seems reasonable by visually inspecting the graph over the concentration.
Since b = 0.92 the decrease should be 1-0.92 = 0.08 (8%) each year.
```{r}

(
  plot.data <- 
    ggplot(data =Pb_mossa, 
           aes(x=nyear, y=Pb)) + 
    geom_point(size = 3) +
    xlab("Time after 1975 (years)") +
    ylab("Pb in moss (mg/kg)") +
    labs(title = "Pb in moss over time") +
    theme(text = element_text(size = 18))
)

Pb_log.pred <- 
  cbind(Pb_log,
        fit = predict(Pb_log.model),
        conf = predict(Pb_log.model,
                          interval = "confidence"),
        pred = predict(Pb_log.model,
                          interval = "prediction"))
head(Pb_log.pred)
(
  plot.pred <- plot.data +
    geom_line(data = Pb_log.pred,
              aes(y = exp(fit)),
              color = "blue", size = 1) +
    geom_ribbon(data = Pb_log.pred,
                aes(ymin = exp(conf.lwr), 
                ymax = exp(conf.upr)),
                alpha = 0.2) +
    geom_line(data = Pb_log.pred, 
              aes(y = exp(pred.lwr)),
              color = "red", linetype = "dashed",
              size = 1) +
    geom_line(data = Pb_log.pred, 
              aes(y = exp(pred.upr)),
              color = "red", linetype = "dashed",
              size = 1) +
    labs(caption = "fitted line and 95% conf. and pred. intervals")
)


plot.data <-
  ggplot(data =Pb_mossa, 
         aes(x=year, y=Pb)) + 
  geom_point(size = 3) +
  xlab("Year") +
  ylab("Pb in moss (mg/kg)") +
  labs(title = "Pb in moss over time") +
  theme(text = element_text(size = 18))


(
  plot.pred <- plot.data +
    geom_line(data = Pb_log.pred,
              aes(y = exp(fit)),
              color = "blue", size = 1) +
    geom_ribbon(data = Pb_log.pred,
                aes(ymin = exp(conf.lwr), 
                ymax = exp(conf.upr)),
                alpha = 0.2) +
    geom_line(data = Pb_log.pred, 
              aes(y = exp(pred.lwr)),
              color = "red", linetype = "dashed",
              size = 1) +
    geom_line(data = Pb_log.pred, 
              aes(y = exp(pred.upr)),
              color = "red", linetype = "dashed",
              size = 1) +
    labs(caption = "fitted line and 95% conf. and pred. intervals")
)
```
 Looks to fit the data much better than the linear fit
 
```{r}
(Pb_log.x0 <- data.frame(nyear = c(2015-1975, 2020-1975)))

(
  Pb_log.y0.pred <- 
    cbind(Pb_log.x0, 
          predict(Pb_log.model, Pb_log.x0, se.fit = TRUE),
          conf = predict(Pb_log.model, Pb_log.x0, 
                         interval = "confidence"),
          pred = predict(Pb_log.model, Pb_log.x0,
                         interval = "prediction"))
)

Pb_log.y0.pred$residual.scale <- Pb_log.y0.pred$conf.fit <-
  Pb_log.y0.pred$pred.fit <- NULL
Pb_log.y0.pred

Pb_log.y0.pred$se.pred <- 
  sqrt(Pb_log.summary$sigma^2 + Pb_log.y0.pred$se.fit^2)
```
 
 
```{r}
Pb_log.y0exp.pred = exp(Pb_log.y0.pred)
Pb_log.y0exp.pred$nyear = Pb_log.y0.pred$nyear

Pb_log.y0exp.pred
```
The confidence and prediction intervals seem reasonable since they contain no negative values and are small.
 